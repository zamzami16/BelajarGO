// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"belajar-go-rest/app"
	"belajar-go-rest/controller"
	"belajar-go-rest/logging"
	"belajar-go-rest/middleware"
	"belajar-go-rest/repository"
	"belajar-go-rest/service"
	"github.com/go-playground/validator"
	"github.com/google/wire"
	"net/http"
)

// Injectors from injector.go:

func InitializeServer() *http.Server {
	categoryRepository := repository.NewCategoryRepository()
	db := app.NewDB()
	validate := validator.New()
	loggerProvider := logging.NewLoggerProvider()
	categoryService := service.NewCategoryService(categoryRepository, db, validate, loggerProvider)
	categoryController := controller.NewCategoryController(categoryService)
	router := app.NewRouter(categoryController)
	authMiddleware := middleware.NewAuthMiddleware(router)
	server := newServer(authMiddleware)
	return server
}

// injector.go:

// Providers
var categorySet = wire.NewSet(repository.NewCategoryRepository, service.NewCategoryService, controller.NewCategoryController)

// Helper to create http.Server
func newServer(authMiddleware *middleware.AuthMiddleware) *http.Server {
	return &http.Server{
		Addr:    "localhost:3000",
		Handler: authMiddleware,
	}
}
